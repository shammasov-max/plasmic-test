// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 2VVT8m4ceSMgkrFhZsaQL2
// Component: rZmdVPZ0Xz

import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: HWqtI6VLbq_/component

import { useScreenVariants as useScreenVariantsyy2Qx9DjA8EQuQ } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: Yy2qx9djA8EQuQ/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic_plasmic_rich_components.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic_blank_app.module.css"; // plasmic-import: 2VVT8m4ceSMgkrFhZsaQL2/projectcss
import sty from "./PlasmicNewPage.module.css"; // plasmic-import: rZmdVPZ0Xz/css

import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: hc3iuef64KC9/icon
import Icon4Icon from "./icons/PlasmicIcon__Icon4"; // plasmic-import: eIGqW8GIHrGN/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: gmD5HooFn_O/icon
import Icon5Icon from "./icons/PlasmicIcon__Icon5"; // plasmic-import: 2znu9UjDsV-B/icon
import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: in-eRIPf63vM/icon
import imagePuyZrXjXoxbv from "./images/image.jpg"; // plasmic-import: puyZRXjXoxbv/picture
import image2MoXn7Mu6EMb from "./images/image2.jpg"; // plasmic-import: -MOXn7Mu6eMB/picture
import image3A0M8Qi5Sij4L from "./images/image3.jpg"; // plasmic-import: A0M8qi5SIJ4L/picture

export type PlasmicNewPage__VariantMembers = {};
export type PlasmicNewPage__VariantsArgs = {};
type VariantPropType = keyof PlasmicNewPage__VariantsArgs;
export const PlasmicNewPage__VariantProps = new Array<VariantPropType>();

export type PlasmicNewPage__ArgsType = {};
type ArgPropType = keyof PlasmicNewPage__ArgsType;
export const PlasmicNewPage__ArgProps = new Array<ArgPropType>();

export type PlasmicNewPage__OverridesType = {
  root?: p.Flex<"div">;
  foreground?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  faQs?: p.Flex<"div">;
  container5?: p.Flex<"div">;
  accordion4?: p.Flex<"div">;
  accordion8?: p.Flex<"div">;
  accordion9?: p.Flex<"div">;
  accordion10?: p.Flex<"div">;
  footerTop?: p.Flex<"div">;
  container?: p.Flex<"div">;
  footerBottom?: p.Flex<"div">;
  container2?: p.Flex<"div">;
};

export interface DefaultNewPageProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicNewPage__RenderFunc(props: {
  variants: PlasmicNewPage__VariantsArgs;
  args: PlasmicNewPage__ArgsType;
  overrides: PlasmicNewPage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsyy2Qx9DjA8EQuQ()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__y0Feq)}>
            <div className={classNames(projectcss.all, sty.freeBox__bLtR1)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__k98Wq)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__mIman)}
                >
                  {true ? (
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__rmJz
                      )}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__dFBdk)}
                        role={"img"}
                      />
                    </a>
                  ) : null}
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__dKahr)}
                  >
                    <p.Stack
                      as={"a"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__huDg1
                      )}
                    >
                      {false ? (
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__rRgXb)}
                          role={"img"}
                        />
                      ) : null}
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___6Ai9
                        )}
                      >
                        {"About Us"}
                      </div>
                      {false ? (
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__f1Tp)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>
                    <p.Stack
                      as={"a"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__hssEc
                      )}
                    >
                      {false ? (
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__ycig)}
                          role={"img"}
                        />
                      ) : null}
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hyUig
                        )}
                      >
                        {"Features"}
                      </div>
                      {false ? (
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__mUhp3)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>
                    <p.Stack
                      as={"a"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__yc7IP
                      )}
                    >
                      {false ? (
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__oYna)}
                          role={"img"}
                        />
                      ) : null}
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vM0KB
                        )}
                      >
                        {"Pricing "}
                      </div>
                      {false ? (
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__cMoq)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>
                    <p.Stack
                      as={"a"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__mmQhy
                      )}
                    >
                      {false ? (
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__pAyQ8)}
                          role={"img"}
                        />
                      ) : null}
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fqy3N
                        )}
                      >
                        {"Contact"}
                      </div>
                      {false ? (
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__c1N6E)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>
                    <p.Stack
                      as={"a"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__wAky
                      )}
                    >
                      {false ? (
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__f59Qz)}
                          role={"img"}
                        />
                      ) : null}
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sFHh3
                        )}
                      >
                        {"Blog"}
                      </div>
                      {false ? (
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__kkYu2)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button___6IeFe
                      )}
                      endIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__g618E)}
                          role={"img"}
                        />
                      }
                      shape={"rounded" as const}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__qhxqx)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___1UpJ
                        )}
                      >
                        {"Get started"}
                      </div>
                    </Button>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__sGScf)}>
            <div className={classNames(projectcss.all, sty.freeBox__j6RK)}>
              <div className={classNames(projectcss.all, sty.freeBox__g5Ibq)} />

              <p.Stack
                as={"div"}
                data-plasmic-name={"foreground"}
                data-plasmic-override={overrides.foreground}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__i3F6V)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__gu95S)}
                  >
                    <h1
                      data-plasmic-name={"h1"}
                      data-plasmic-override={overrides.h1}
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1
                      )}
                    >
                      {"Pricing plans"}
                    </h1>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fKGwr
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </p.Stack>
                <div className={classNames(projectcss.all, sty.freeBox__lqsaR)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__cfSo)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__jbnDf)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___5NDqu
                        )}
                      >
                        {"Starter"}
                      </div>
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__xiiDu
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__hX2Jp
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jfny
                            )}
                          >
                            {"$"}
                          </div>
                          <h2
                            className={classNames(
                              projectcss.all,
                              projectcss.h2,
                              projectcss.__wab_text,
                              sty.h2__xGxJz
                            )}
                          >
                            {"8"}
                          </h2>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__lUqJy
                          )}
                        >
                          {"/month"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tuwKj)}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__htBUu)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___04Ji8
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__nRuYz
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___6C6Tz
                            )}
                          >
                            <Icon5Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg___0TiD
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__gkdyW
                              )}
                            >
                              <Icon5Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__vj5Zx
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__bjvqZ
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___4M6El
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__yc0O
                              )}
                            >
                              {
                                "Vestibulum mollis odio dictum ultrices facilisis molestie vestibulum"
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___0YhQ6
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__mrnCe
                            )}
                          >
                            <Icon5Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__bv3Ls
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__p83I
                              )}
                            >
                              <Icon5Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__cIi4A
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___90ZI
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__fVoOg
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__bWvY
                              )}
                            >
                              {"Mus consequat a justo"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___7DAzj
                          )}
                        >
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button__jwZhN
                            )}
                            endIcon={
                              <Icon6Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___2HzNk
                                )}
                                role={"img"}
                              />
                            }
                            showEndIcon={true}
                            startIcon={
                              <ChecksvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__eFHg4
                                )}
                                role={"img"}
                              />
                            }
                            submitsForm={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__hmbi4
                              )}
                            >
                              {"Buy starter"}
                            </div>
                          </Button>
                        </div>
                      ) : null}
                    </p.Stack>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__fYs5I)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__s5Znd)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yBmp0
                        )}
                      >
                        {"Pro"}
                      </div>
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___7Fpr
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__y0Izg
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ksal1
                            )}
                          >
                            {"$"}
                          </div>
                          <h2
                            className={classNames(
                              projectcss.all,
                              projectcss.h2,
                              projectcss.__wab_text,
                              sty.h2__eeUtB
                            )}
                          >
                            {"16"}
                          </h2>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__eDJy
                          )}
                        >
                          {"/month"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ufbG)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__wpNFy
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__qyNa4
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__zOce
                            )}
                          >
                            <Icon5Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__tsesU
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__bYz8U
                              )}
                            >
                              <Icon5Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__mpUj9
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__mQZfp
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___3W3I1
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__yt2Xb
                              )}
                            >
                              {
                                "Ligula primis mollis sem dignissim semper lectus parturient"
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__eMBmD
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__fwJsF
                            )}
                          >
                            <Icon5Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__kEiHc
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__yJcg7
                              )}
                            >
                              <Icon5Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__cko6M
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___9HPMs
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__sgCxp
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__rmrki
                              )}
                            >
                              {"A curabitur dignissim pharetra porta suscipit"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ldvg8
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__uIgWj
                            )}
                          >
                            <Icon5Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg___5RXgM
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__zodow
                              )}
                            >
                              <Icon5Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__zbjv0
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__aXorW
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__j3Zg
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___8YbEc
                              )}
                            >
                              {
                                "Condimentum diam a et sapien praesent potenti torquent a eros"
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__wXggZ
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__mniFh
                            )}
                          >
                            <Icon5Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__sve3C
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__psY2D
                              )}
                            >
                              <Icon5Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__fRe4B
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__h8LOd
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__vg0Wr
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__vSx5E
                              )}
                            >
                              {"Conubia in hac eu elementum sodales"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__dFms8
                        )}
                      >
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__cuKiT
                          )}
                          color={"blue" as const}
                          endIcon={
                            <Icon6Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__guqnO
                              )}
                              role={"img"}
                            />
                          }
                          shape={"rounded" as const}
                          showEndIcon={true}
                          startIcon={
                            <ChecksvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__vUmZb
                              )}
                              role={"img"}
                            />
                          }
                          submitsForm={true}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__iRkyI
                            )}
                          >
                            {"Buy pro"}
                          </div>
                        </Button>
                      </div>
                    </p.Stack>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__eDiK7)}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___8CsBr)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__arj2D)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__je1BG
                        )}
                      >
                        {"Team"}
                      </div>
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___925F
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__tk51
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___9A9T6
                            )}
                          >
                            {"$"}
                          </div>
                          <h2
                            className={classNames(
                              projectcss.all,
                              projectcss.h2,
                              projectcss.__wab_text,
                              sty.h2__tIhxA
                            )}
                          >
                            {"10"}
                          </h2>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wiEe
                          )}
                        >
                          {"/member"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bnzn8)}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___1Fim6
                      )}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__o5KWd
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__au523
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__a2P2R
                            )}
                          >
                            <Icon5Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__zaHcD
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__jtM
                              )}
                            >
                              <Icon5Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__aObw
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__yS6Np
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__yu8Uj
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__dDukB
                              )}
                            >
                              {"Ad nam curae a potenti platea"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__nohkS
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__dRzdP
                            )}
                          >
                            <Icon5Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__jHvVi
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__xt5B
                              )}
                            >
                              <Icon5Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__kMKel
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__lRrzs
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__hkc6M
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___2Q9Oh
                              )}
                            >
                              {
                                "A adipiscing scelerisque pretium consectetur sem"
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>
                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__nTtE
                            )}
                          >
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__nAdU
                              )}
                              endIcon={
                                <Icon6Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__q5BW6
                                  )}
                                  role={"img"}
                                />
                              }
                              showEndIcon={true}
                              startIcon={
                                <ChecksvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__fHo3K
                                  )}
                                  role={"img"}
                                />
                              }
                              submitsForm={true}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__owfvW
                                )}
                              >
                                {"Buy Team"}
                              </div>
                            </Button>
                          </div>
                        ) : null}
                      </p.Stack>
                    </p.Stack>
                  </div>
                </div>
              </p.Stack>
            </div>
          </div>
          <div
            data-plasmic-name={"faQs"}
            data-plasmic-override={overrides.faQs}
            className={classNames(projectcss.all, sty.faQs)}
          >
            <div
              data-plasmic-name={"container5"}
              data-plasmic-override={overrides.container5}
              className={classNames(projectcss.all, sty.container5)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__bz6Fb
                )}
              >
                {"FAQ"}
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__nh1OG
                )}
              >
                {
                  "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                }
              </div>
            </div>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___8N4D4)}
            >
              <div className={classNames(projectcss.all, sty.column__oWu9L)}>
                <div
                  data-plasmic-name={"accordion4"}
                  data-plasmic-override={overrides.accordion4}
                  className={classNames(projectcss.all, sty.accordion4)}
                >
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__iyBtr
                    )}
                  >
                    {"The standard Lorem Ipsum passage, used since the 1500s"}
                  </h5>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yY57W
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.column__skUsd)}>
                <div
                  data-plasmic-name={"accordion8"}
                  data-plasmic-override={overrides.accordion8}
                  className={classNames(projectcss.all, sty.accordion8)}
                >
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__gO6Ej
                    )}
                  >
                    {"The standard Lorem Ipsum passage, used since the 1500s"}
                  </h5>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yzowL
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.column__tGvIr)}>
                <div
                  data-plasmic-name={"accordion9"}
                  data-plasmic-override={overrides.accordion9}
                  className={classNames(projectcss.all, sty.accordion9)}
                >
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__nBs7X
                    )}
                  >
                    {"The standard Lorem Ipsum passage, used since the 1500s"}
                  </h5>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__laq0A
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.column___4NCkZ)}>
                <div
                  data-plasmic-name={"accordion10"}
                  data-plasmic-override={overrides.accordion10}
                  className={classNames(projectcss.all, sty.accordion10)}
                >
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5___5Zd4X
                    )}
                  >
                    {"The standard Lorem Ipsum passage, used since the 1500s"}
                  </h5>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nvWwl
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </div>
              </div>
            </p.Stack>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__wfhy7)}>
            <div
              data-plasmic-name={"footerTop"}
              data-plasmic-override={overrides.footerTop}
              className={classNames(projectcss.all, sty.footerTop)}
            >
              <div
                data-plasmic-name={"container"}
                data-plasmic-override={overrides.container}
                className={classNames(projectcss.all, sty.container)}
              >
                <div
                  className={classNames(projectcss.all, sty.columns___9CE7H)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__bqo4)}
                  >
                    <Icon3Icon
                      className={classNames(projectcss.all, sty.svg__bcMal)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gukaJ
                      )}
                    >
                      {
                        "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s"
                      }
                    </div>
                  </p.Stack>
                  <div
                    className={classNames(projectcss.all, sty.column__aTsLh)}
                  >
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__mJz34
                      )}
                    >
                      {"Menu"}
                    </h5>
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__z6O2H
                      )}
                    >
                      {"Privacy Policy"}
                    </a>
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___7W5V
                      )}
                    >
                      {"Terms of Service"}
                    </a>
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__tGr8B
                      )}
                    >
                      {"Pricing "}
                    </a>
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__aIi0J
                      )}
                    >
                      {"Contact"}
                    </a>
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___6GNv
                      )}
                    >
                      {"Blog"}
                    </a>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__ivR06)}
                  >
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__neG9I
                      )}
                    >
                      {"Gallery"}
                    </h5>
                    <div
                      className={classNames(projectcss.all, sty.columns__frnX)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__vQmYb
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___7Osc)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: imagePuyZrXjXoxbv,
                            fullWidth: 390,
                            fullHeight: 290,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__v6Wkt
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__v8UIj)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image2MoXn7Mu6EMb,
                            fullWidth: 390,
                            fullHeight: 290,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__isR6F
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__nfVr)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image3A0M8Qi5Sij4L,
                            fullWidth: 390,
                            fullHeight: 290,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.columns___6Gbnh
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__eLpxU
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__winYp)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: imagePuyZrXjXoxbv,
                            fullWidth: 390,
                            fullHeight: 290,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__q9ICf
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__gankd)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image2MoXn7Mu6EMb,
                            fullWidth: 390,
                            fullHeight: 290,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__jc88Y
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__kuTqS)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image3A0M8Qi5Sij4L,
                            fullWidth: 390,
                            fullHeight: 290,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"footerBottom"}
              data-plasmic-override={overrides.footerBottom}
              className={classNames(projectcss.all, sty.footerBottom)}
            >
              <div
                data-plasmic-name={"container2"}
                data-plasmic-override={overrides.container2}
                className={classNames(projectcss.all, sty.container2)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___68Qkh
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {
                        "\u00a9 Company Name. All rights reserved. This site proudly built with "
                      }
                    </React.Fragment>
                    {
                      <a
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          projectcss.plasmic_default__inline,
                          sty.link__i0RN
                        )}
                        href={"https://www.plasmic.app/" as const}
                      >
                        {"Plasmic"}
                      </a>
                    }
                    <React.Fragment>{"."}</React.Fragment>
                  </React.Fragment>
                </div>
              </div>
            </div>
          </div>
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "foreground",
    "h1",
    "faQs",
    "container5",
    "accordion4",
    "accordion8",
    "accordion9",
    "accordion10",
    "footerTop",
    "container",
    "footerBottom",
    "container2"
  ],
  foreground: ["foreground", "h1"],
  h1: ["h1"],
  faQs: [
    "faQs",
    "container5",
    "accordion4",
    "accordion8",
    "accordion9",
    "accordion10"
  ],
  container5: ["container5"],
  accordion4: ["accordion4"],
  accordion8: ["accordion8"],
  accordion9: ["accordion9"],
  accordion10: ["accordion10"],
  footerTop: ["footerTop", "container"],
  container: ["container"],
  footerBottom: ["footerBottom", "container2"],
  container2: ["container2"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  foreground: "div";
  h1: "h1";
  faQs: "div";
  container5: "div";
  accordion4: "div";
  accordion8: "div";
  accordion9: "div";
  accordion10: "div";
  footerTop: "div";
  container: "div";
  footerBottom: "div";
  container2: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicNewPage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicNewPage__VariantsArgs;
    args?: PlasmicNewPage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicNewPage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicNewPage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicNewPage__ArgProps,
          internalVariantPropNames: PlasmicNewPage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicNewPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicNewPage";
  } else {
    func.displayName = `PlasmicNewPage.${nodeName}`;
  }
  return func;
}

export const PlasmicNewPage = Object.assign(
  // Top-level PlasmicNewPage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    foreground: makeNodeComponent("foreground"),
    h1: makeNodeComponent("h1"),
    faQs: makeNodeComponent("faQs"),
    container5: makeNodeComponent("container5"),
    accordion4: makeNodeComponent("accordion4"),
    accordion8: makeNodeComponent("accordion8"),
    accordion9: makeNodeComponent("accordion9"),
    accordion10: makeNodeComponent("accordion10"),
    footerTop: makeNodeComponent("footerTop"),
    container: makeNodeComponent("container"),
    footerBottom: makeNodeComponent("footerBottom"),
    container2: makeNodeComponent("container2"),

    // Metadata about props expected for PlasmicNewPage
    internalVariantProps: PlasmicNewPage__VariantProps,
    internalArgProps: PlasmicNewPage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicNewPage;
/* prettier-ignore-end */
